<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.chthhk</groupId>
	<artifactId>scaffold</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>scaffold Maven Webapp</name>
	<url>http://maven.apache.org</url>
	
	<repositories>
		<repository>
			<id>oschina Releases</id>
			<name>oschina Releases</name>
			<url>http://maven.oschina.net/content/groups/public</url>
		</repository>

		<repository>
			<id>apache-repo</id>
			<name>apache Repository</name>
			<url>https://repository.apache.org/content/groups/public/</url>
		</repository>
		<repository>
			<id>java-repo</id>
			<name>java Repository</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>springsource-repo</id>
			<name>SpringSource Repository</name>
			<url>http://repo.spring.io/release/</url>
		</repository>
		<repository>
			<id>springsource-repo-snapshot</id>
			<name>SpringSource Repository</name>
			<url>http://repo.spring.io/snapshot/</url>
		</repository>
		<repository>
			<id>cloudhopper</id>
			<name>Repository for Cloudhopper</name>
			<url>http://maven.cloudhopper.com/repos/third-party/</url>
		</repository>
		<repository>
			<id>jboss-repo-releases</id>
			<name>Jboss Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<layout>default</layout>
			<url>http://repo.maven.apache.org/maven2</url>
		</repository>
		<repository>
			<id>maven-repo1</id>
			<name>maven-repo1</name>
			<layout>default</layout>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>sourceforge-releases</id>
			<name>Sourceforge Releases</name>
			<url>https://oss.sonatype.org/content/repositories/sourceforge-releases</url>
		</repository>
		<repository>
			<id>clojars</id>
			<name>clojars Releases</name>
			<url>http://clojars.org/repo/</url>
		</repository>
	</repositories>
	
		<properties>
			<!-- 			
				能使用的全局变量：  
				${basedir} 项目根目录
				${project.build.directory} 构建目录，缺省为target
				${project.build.outputDirectory} 构建过程输出目录，缺省为target/classes
				${project.build.finalName} 产出物名称，缺省为${project.artifactId}-${project.version}
				${project.packaging} 打包类型，缺省为jar
				${maven.build.timestamp}表示项目构件开始时间
				${project.xxx} 当前pom文件的任意节点的内容 例如：${project.version}
				${settings.localRepository}表示本地仓库的地址 settings.xml文件属性(与pom属性同理,用户使用以settings.开头的属性引用settings.xml文件中的XML元素值)
				${user.home}表示用户目录  Java系统属性  System.getProperties()可得到所有的Java属性
				${env.JAVA_HOME}表示JAVA_HOME环境变量的值  mvn help:system命令可查看所有环境变量
			-->
			<!-- 版本设置替代 maven-compiler-plugin设置-->
			<maven.compiler.source>1.7</maven.compiler.source>  
	        <maven.compiler.target>1.7</maven.compiler.target>  
	        <maven.compiler.compilerVersion>1.7</maven.compiler.compilerVersion>
	        <!-- 字符集设置替代maven-resources-plugin设置-->  
	        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>  
	        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>  
	        <maven.compiler.encoding>UTF-8</maven.compiler.encoding> 
	        
			<spring.version>4.2.6.RELEASE</spring.version>
			<validator.version>5.2.4.Final</validator.version>
			<mybatis.version>3.2.8</mybatis.version>
			<mybatis-spring.version>1.2.3</mybatis-spring.version>
			<druid.version>1.0.18</druid.version>
			<mysql.driver.version>5.1.30</mysql.driver.version>
			<slf4j.version>1.7.12</slf4j.version>
			<log4j2.version>2.5</log4j2.version>
			<commons-lang3.version>3.3.2</commons-lang3.version>
			<commons-io.version>2.4</commons-io.version>
			<commons-codec.version>1.9</commons-codec.version>
			<commons-fileupload.version>1.3.1</commons-fileupload.version>
			<commons-beanutils.version>1.9.1</commons-beanutils.version>
			<commons-collections.version>4.1</commons-collections.version>
			<ehcache.version>2.6.11</ehcache.version>
			<ehcache-web.version>2.0.4</ehcache-web.version>
			<shiro.version>1.2.3</shiro.version>
			<jackson.version>2.2.3</jackson.version>
			<fastjson.version>1.2.12</fastjson.version>
			<orika.version>1.5.0</orika.version>
			<guava.version>20.0</guava.version>
			<dozer.version>5.5.1</dozer.version>
			<poi.version>3.9</poi.version>
			<freemarker.version>2.3.20</freemarker.version>
			<xstream.version>1.4.7</xstream.version>
			<tomcat.version>7.0.47</tomcat.version>
			
		</properties>
		<dependencies>
			<!-- Test -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>xmlunit</groupId>
				<artifactId>xmlunit</artifactId>
				<version>1.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.jayway.jsonpath</groupId>
				<artifactId>json-path</artifactId>
				<version>0.8.1</version>
				<scope>test</scope>
			</dependency>
	  		<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
		
			<!-- Spring WebMVC Start -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
				<!--排除依赖 改用slf4j的接口 -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<!-- spring orm -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Spring WebMVC End -->
		
			<!-- AOP begin -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>1.8.9</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.8.9</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>3.1</version>
			</dependency>
			<!-- AOP end -->
		
			<!-- validate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${validator.version}</version>
			</dependency>
		
		
			<!-- PERSISTENCE begin -->
			<!-- MyBatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring.version}</version>
			</dependency>
		
			<!-- connection pool -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>
		
			<!-- jdbc driver -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.driver.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- PERSISTENCE end -->
		
		
			<!-- log start -->
			<!-- slf4j 日志接口 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- log4j1编程实现切换到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- common-logging 实际调用slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- java.util.logging 实际调用slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- 用于log4j2与slf4j集成 -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>${log4j2.version}</version>
			</dependency>
			<!-- log4j2接口 项目中使用sjf4j接口 -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j2.version}</version>
			</dependency>
			<!-- log4j2 实现 -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-web</artifactId>
				<version>${log4j2.version}</version>
			</dependency>
			<!-- log end -->
		
		
			<!-- commons begin -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- commons end -->
			
			<!-- for CommonCollections -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections.version}</version>
				<optional>true</optional>
			</dependency>
			<!-- OPTIONAL end -->
		
			<!-- Servlet Start -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>1.1.2</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.0.1</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>2.2</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
			    <groupId>org.apache.tomcat</groupId>
			    <artifactId>tomcat-catalina</artifactId>
			    <version>${tomcat.version}</version>
			    <scope>provided</scope>
			</dependency>
			<!-- Servlet End -->
		
			<!-- CACHE begin -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${ehcache.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-web</artifactId>
				<version>${ehcache-web.version}</version>
			</dependency>
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>2.9.0</version>
			</dependency>
			<!-- CACHE end -->
			
			<dependency>  
	            <groupId>org.springframework.data</groupId>  
	            <artifactId>spring-data-redis</artifactId>  
	            <version>1.7.2.RELEASE</version>  
	        </dependency>  
		
			<!-- SECURITY begin -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-cas</artifactId>
				<version>${shiro.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-web</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-ehcache</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<!-- SECURITY end -->
		
			<!-- google java lib -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
		
			<!-- jackson json -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-jaxb-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
		
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			
			<!-- for ObjectMapper -->
			<dependency>
				<groupId>ma.glasnost.orika</groupId>
				<artifactId>orika-core</artifactId>
				<version>${orika.version}</version>
				<optional>true</optional>
			</dependency>
		
			<!-- 条形码、二维码生成 -->
			<dependency>
				<groupId>com.google.zxing</groupId>
				<artifactId>core</artifactId>
				<version>2.2</version>
			</dependency>
			<dependency>
				<groupId>com.google.zxing</groupId>
				<artifactId>javase</artifactId>
				<version>2.2</version>
			</dependency>
		
			<!-- poi office -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml-schemas</artifactId>
				<version>${poi.version}</version>
			</dependency>
		
			<!-- image util -->
			<dependency>
				<groupId>com.drewnoakes</groupId>
				<artifactId>metadata-extractor</artifactId>
				<version>2.6.2</version>
			</dependency>
		
			<!-- xstream xml -->
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${xstream.version}</version>
			</dependency>
		
			<!-- pojo copy -->
			<dependency>
				<groupId>net.sf.dozer</groupId>
				<artifactId>dozer</artifactId>
				<version>${dozer.version}</version>
			</dependency>
		
			<!-- freemarker engine -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>
		
			<!-- email -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>1.4.7</version>
			</dependency>
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>1.1.1</version>
			</dependency>
		
			<!-- zookeeper utils -->
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>3.4.8</version>
			</dependency>
			<dependency>
				<groupId>com.101tec</groupId>
				<artifactId>zkclient</artifactId>
				<version>0.9</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-framework</artifactId>
				<version>3.2.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-recipes</artifactId>
				<version>3.2.0</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>5.0.0.Alpha2</version>
			</dependency>
			
			<!-- 验证码 -->
			<dependency>
				<groupId>com.github.axet</groupId>
				<artifactId>kaptcha</artifactId>
				<version>0.0.9</version>
			</dependency>
			
			<!-- @Inject -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
			</dependency>
			
			<!-- Joda Time Library -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.3</version>
			</dependency>
			
			<!-- Rome Atom+RSS -->
			<dependency>
				<groupId>com.rometools</groupId>
				<artifactId>rome</artifactId>
				<version>1.5.0</version>
			</dependency>
		
		</dependencies>
		<build>
			<finalName>scaffold</finalName>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<!-- 忽略单元测试类似 mvn install -Dmaven.test.skip=true -->
						<testFailureIgnore>true</testFailureIgnore>
					</configuration>
				</plugin>
				
				<!-- <plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<encoding>UTF-8</encoding>
								复制${log4j.path}（变量）下面的log4j2.xml到classpath目录
								<outputDirectory>${project.build.outputDirectory}</outputDirectory>
								<resources>
									<resource>
										<directory>${log4j.path}</directory>
										<includes>
											<include>log4j2.xml</include>
										</includes>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin> -->
			</plugins>
			
			<filters>
		       <!-- 这里使用的是profile中的properties 类似作用profile中properties批量配置文件 -->
		      <!-- <filter>${filterFile}</filter> -->
		    </filters>
			<resources>
				<resource>
					<!-- 使用filter去覆盖 -->
					<filtering>true</filtering>
					<directory>src/main/resources</directory>
					<includes>
						<include>spring-config.xml</include>
						<include>log4j2.xml</include>
					</includes>
				</resource>
				<resource>
					<!-- 不要使用filter去覆盖 -->
					<filtering>false</filtering>
					<directory>src/main/resources</directory>
					<includes>
						<include>**/*.xml</include>
						<include>**/*.properties</include>
					</includes>
				</resource>
				<resource>
					<!-- 不要使用filter去覆盖 -->
					<filtering>false</filtering>
					<directory>src/main/java</directory>
					<includes>
						<include>**/*.xml</include>
						<include>**/*.properties</include>
					</includes>
				</resource>
			</resources>
		</build>
		<profiles>
				<profile>
					<id>local</id>
					<activation>
						<activeByDefault>true</activeByDefault>
					</activation>
					<properties>
						<config.path>classpath:config/local</config.path>
						<log.level>debug</log.level>
						<!-- 这里的地址可以不用在工程中，比如某台打包机器上面的固定目录 -->
						<!-- <filterFile>src/main/filters/filter-test.properties</filterFile> -->
					</properties>
				</profile>
				<profile>
					<id>beta</id>
					<properties>
						<config.path>classpath:config/beta</config.path>
						<log.level>debug</log.level>
					</properties>
				</profile>
				<profile>
					<id>preview</id>
					<properties>
						<config.path>classpath:config/preview</config.path>
						<log.level>info</log.level>
					</properties>
				</profile>
				<profile>
					<id>online</id>
					<properties>
						<config.path>classpath:config/online</config.path>
						<log.level>info</log.level>
					</properties>
				</profile>
			</profiles>
</project>
