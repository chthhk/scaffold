<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">
 
    <!-- 定义调用对象和调用对象的方法 -->
    <bean id="checkActionDetail"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 调用的类 -->
        <property name="targetObject" ref="checkActionJob" />
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="check" />
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>
    
        <!-- 定义调用对象和调用对象的方法 -->
    <bean id="runActionDetail"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 调用的类 -->
        <property name="targetObject" ref="runActionJob" />
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="run" />
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>
     
         
     <!-- 定义触发时间 -->
    <bean id="checkActionTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="checkActionDetail" />
        </property>
        <property name="cronExpression">
        	<!--每隔10分钟执行一次  -->
            <value>0 */10 * * * ?</value>
        </property>
    </bean>
    
         <!-- 定义触发时间 -->
    <bean id="runActionTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="runActionDetail" />
        </property>
        <property name="cronExpression">
        	<!--每天15:30点执行一次  -->
            <value>0 30 15 * * ?</value>
        </property>
    </bean>
    
             <!-- 定义触发时间 -->
    <bean id="runActionTrigger10"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="runActionDetail" />
        </property>
        <property name="cronExpression">
        	<!--每天22点执行一次  -->
            <value>0 0 22 * * ?</value>
        </property>
    </bean>
     
    <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
    <!-- 如果lazy-init='true',则需要实例化该bean才能执行调度程序 -->
    <bean id="startQuertz" lazy-init="false" autowire="no"
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
               <ref bean="checkActionTrigger" />
               <ref bean="runActionTrigger" />
               <ref bean="runActionTrigger10" />
            </list>
        </property>
        <!-- <property name="autoStartup" value="true"/>  -->
    </bean>
    
</beans>

