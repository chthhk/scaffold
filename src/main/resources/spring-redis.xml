<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

		<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
	        <property name="maxTotal" value="10"></property>  
	        <property name="maxIdle" value="10"></property>  
	        <property name="minIdle" value="2"></property>  
	        <property name="maxWaitMillis" value="15000"></property>  
	        <property name="minEvictableIdleTimeMillis" value="300000"></property>  
	        <property name="numTestsPerEvictionRun" value="3"></property>  
	        <property name="timeBetweenEvictionRunsMillis" value="60000"></property>  
	        <property name="testOnBorrow" value="true"></property>  
	        <property name="testOnReturn" value="true"></property>  
	        <property name="testWhileIdle" value="true"></property>  
	    </bean>  
	  
	    <bean id="jedisConnectionFactory"  
	        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
	        destroy-method="destroy">  
	        <property name="hostName" value="127.0.0.1" />  
	        <property name="port" value="6379" />  
	        <property name="timeout" value="15000" />  
	        <property name="database" value="0" />  
	        <property name="password" value="" />  
	        <property name="usePool" value="true" />  
	        <property name="poolConfig" ref="jedisPoolConfig" />  
	    </bean>  
	    
	    	    
	    
	    <!-- redis sentinel -->
		<!-- <bean id="sentinelConfig"
			class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
			<property name="master">
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<property name="name" value="mymaster" />
				</bean>
			</property>
			<property name="sentinels">
				<set>
					<bean class="org.springframework.data.redis.connection.RedisNode">
						<constructor-arg name="host" value="10.200.0.102" />
						<constructor-arg name="port" value="26379" />
					</bean>
					<bean class="org.springframework.data.redis.connection.RedisNode">
						<constructor-arg name="host" value="10.200.0.102" />
						<constructor-arg name="port" value="26380" />
					</bean>
				</set>
			</property>
		</bean>
		<bean id="jedisConnectionFactory"
			class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
			<constructor-arg ref="sentinelConfig" />
		</bean> -->
		<!-- redis sentinel end-->
	    
	    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"  
	        p:connection-factory-ref="jedisConnectionFactory">  
	        
	        <!-- 开启事务支持 -->
			<property name="enableTransactionSupport" value="true" />
	        
	        <!-- 序列化方式 建议key/hashKey采用StringRedisSerializer。 -->  
	        <property name="keySerializer">  
	            <bean  
	                class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	        </property>  
	        <property name="hashKeySerializer">  
	            <bean  
	                class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	        </property>  
	        <property name="valueSerializer">  
	            <bean  
	                class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	        </property>  
	        <property name="hashValueSerializer">  
	            <bean  
	                class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	        </property>  
	    </bean>  
	    
	    <!-- 对string操作的封装 -->  
	    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"  
	        p:connection-factory-ref="jedisConnectionFactory" >	
	        <!-- 开启事务支持 -->
			<property name="enableTransactionSupport" value="true" />
		</bean>
		
		<!-- Spring Cache Redis -->
		<cache:annotation-driven />
		<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
			<constructor-arg ref="redisTemplate" />
		</bean>
		
		
		<!-- redis订阅 -->	
	<!-- 	<bean id="messageListener"
			class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
			 <property name="delegate">
			 	<bean id="demoListener" class="com.demo.lisenter.DemoListener" />
			 </property>
	        <property name="serializer" ref="jdkSerializer" />
		</bean>
	
		<bean id="redisContainer"
			class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
			<property name="connectionFactory" ref="jedisConnectionFactory" />
			<property name="messageListeners">
				<map>
					<entry key-ref="messageListener">
						<bean class="org.springframework.data.redis.listener.ChannelTopic">
							<constructor-arg value="demo:message" />
						</bean>
					</entry>
				</map>
			</property>
		</bean> -->

</beans>